# Human Tasks:
# 1. Verify resource limits align with actual service requirements in production
# 2. Configure monitoring and alerting thresholds for the service
# 3. Review security context settings for compliance requirements
# 4. Set up proper network policies for service communication
# 5. Configure proper log aggregation for the service
# 6. Verify health check endpoints are properly implemented
# 7. Review and adjust replica count based on load requirements

# Requirement: Push Notification System (1.3 Scope/Core Features)
# - Kubernetes deployment configuration for notification service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-service
  namespace: default
  labels:
    app: notification-service
    component: backend
    tier: microservice
spec:
  # Requirement: System Monitoring (2.4.1 System Monitoring)
  # - High availability with multiple replicas
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: notification-service
  template:
    metadata:
      labels:
        app: notification-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3007"
        prometheus.io/path: "/metrics"
    spec:
      # Requirement: System Monitoring (2.4.1 System Monitoring)
      # - Container health monitoring
      containers:
        - name: notification-service
          image: founditure/notification-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 3007
              protocol: TCP
          # Resource limits and requests
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          # Health checks
          livenessProbe:
            httpGet:
              path: /health
              port: 3007
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 3007
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          # Environment configuration
          envFrom:
            - configMapRef:
                name: founditure-config
          # Working directory
          workingDir: /usr/src/app
          # Security context
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          # Volume mounts for temporary storage
          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
      # Volumes
      volumes:
        - name: tmp-volume
          emptyDir: {}
      # Service account
      serviceAccountName: notification-service-sa
      # Security context for pod
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault

---
# Requirement: Real-time Messaging (2.2.1 Core Components/Messaging Service)
# - Kubernetes service configuration for notification service
apiVersion: v1
kind: Service
metadata:
  name: notification-service
  namespace: default
  labels:
    app: notification-service
    component: backend
    tier: microservice
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3007"
spec:
  type: ClusterIP
  ports:
    - port: 3007
      targetPort: 3007
      protocol: TCP
      name: http
  selector:
    app: notification-service